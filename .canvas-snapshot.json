{
  "quiz": {
    "id": 53503,
    "title": "Data Structures and Algorithms Quiz",
    "html_url": "https://learning.flatironschool.com/courses/7559/quizzes/53503",
    "mobile_url": "https://learning.flatironschool.com/courses/7559/quizzes/53503?force_user=1&persist_headless=1",
    "description": "<div id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"python-p3-quiz-data-structures-and-algorithms\"></div>\n<header class=\"fis-header\"><a class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/python-p3-quiz-data-structures-and-algorithms/issues/new\" target=\"_blank\"><img id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"></a></header>\n<p>It's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again.</p>\n<p>If you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.</p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 5,
    "points_possible": 5.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_53503"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": "",
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53503/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53503/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53503/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/7559/quizzes/53503/submission_versions",
    "assignment_id": 263582,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 25101,
    "show_correct_answers_last_attempt": true,
    "version_number": 3,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": "g9bb72e6d45711d8d39f00be23b5a92a2",
    "in_paced_course": false,
    "question_types": [

    ]
  },
  "questions": [
    {
      "id": 366070,
      "quiz_id": 53503,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 1,
      "question_name": "Question 1",
      "question_type": "multiple_choice_question",
      "question_text": "Which one of these is a FIFO(First in first out) data structure?&nbsp;",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": null,
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": null,
      "answers": [
        {
          "weight": 0,
          "migration_id": "RESPONSE_2512",
          "id": 2512,
          "text": "Set",
          "comments": "Not quite!"
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_9259",
          "id": 9259,
          "text": "Queue",
          "comments": "Correct!"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_74",
          "id": 74,
          "text": "Stack",
          "comments": "Not quite! When can we access the first thing we added to the stack? Imagine a stack of books and you can only remove and add to the top.",
          "comments_html": "Not quite! When can we access the first thing we added to the stack? Imagine a stack of books and you can only remove and add to the top.&nbsp;"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_5092",
          "id": 5092,
          "text": "Dictionary",
          "comments": "Incorrect, A dictionary does not keep track of insertion order.",
          "comments_html": "Incorrect, A dictionary does not keep track of insertion order.&nbsp;"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366071,
      "quiz_id": 53503,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 2,
      "question_name": "Question 2",
      "question_type": "multiple_answers_question",
      "question_text": "What are the essential methods of a Stack?&nbsp;",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Resources: Stack Data Structure",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p>Resources:&nbsp;</p>\n<p><a title=\"Stack Data Structure\" href=\"/courses/7559/pages/stack-data-structure\">Stack Data Structure</a></p>",
      "answers": [
        {
          "weight": 100,
          "migration_id": "RESPONSE_5720",
          "id": 5720,
          "text": "push",
          "html": "<div class=\"highlight\">\n<pre class=\"highlight ruby\">push<code>\n</code></pre>\n</div>",
          "comments": "Correct! We need to be able to add to the stack."
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_3421",
          "id": 3421,
          "text": "pop",
          "html": "<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code>pop</code></pre>\n</div>",
          "comments": "Correct! We need to be able to take elements things from the top of the stack.",
          "comments_html": "Correct! We need to be able to take elements things from the top of the stack.&nbsp;"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_8106",
          "id": 8106,
          "text": "print",
          "html": "<div class=\"highlight\">\n<pre class=\"highlight ruby\"><code>print<br></code></pre>\n</div>",
          "comments": "Not quite! We may write additional methods but this it is not an essential method of a stack.",
          "comments_html": "Not quite! We may write additional methods but this it is not an essential method of a stack.&nbsp;"
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_2796",
          "id": 2796,
          "text": "peek",
          "html": "<div class=\"highlight\">\n<pre class=\"highlight ruby\"><span>peek</span><code>\n</code></pre>\n</div>",
          "comments": "Correct! This is how we can see what is on top of the stack.",
          "comments_html": "Correct! This is how we can see what is on top of the stack.&nbsp;"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366072,
      "quiz_id": 53503,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 3,
      "question_name": "Question 3",
      "question_type": "multiple_choice_question",
      "question_text": "What is the time complexity for a Linked List search method?&nbsp;",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Resources: Singly Linked List Data Structure",
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": "<p>Resources:&nbsp;</p>\n<p><a title=\"Singly Linked List Data Structure\" href=\"/courses/7559/pages/singly-linked-list-data-structure\">Singly Linked List Data Structure</a></p>",
      "answers": [
        {
          "weight": 0,
          "migration_id": "RESPONSE_346",
          "id": 346,
          "text": "O(1)",
          "comments": "Not quite. What if the element we are looking for is at the end of the list?",
          "comments_html": "Not quite. What if the element we are looking for is at the end of the list?&nbsp;"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_2134",
          "id": 2134,
          "text": "O(log n)",
          "comments": "Not quite.",
          "comments_html": "Not quite.&nbsp;"
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_7226",
          "id": 7226,
          "text": "O(n)",
          "comments": "Correct! We may need to go through the entire linked list to find the element we are looking for.",
          "comments_html": "Correct! We may need to go through the entire linked list to find the element we are looking for.&nbsp;"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366073,
      "quiz_id": 53503,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 4,
      "question_name": "Question 4",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Calculate the<span>&nbsp;</span><strong>time complexity</strong><span>&nbsp;</span>for the following code using Big O notation:</p>\n<div class=\"highlight\">\n<pre class=\"highlight python\"><code><span class=\"k\">def</span> <span class=\"nf\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">):</span>\n  <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">head</span> <span class=\"o\">==</span> <span class=\"bp\">None</span><span class=\"p\">:</span>\n    <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">head</span> <span class=\"o\">=</span> <span class=\"n\">node</span>\n    <span class=\"k\">return<br></span>\n  <span class=\"n\">last_node</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">head</span>\n  <span class=\"k\">while</span> <span class=\"n\">last_node</span><span class=\"p\">.</span><span class=\"n\">next_node</span><span class=\"p\">:</span>\n    <span class=\"n\">last_node</span> <span class=\"o\">=</span> <span class=\"n\">last_node</span><span class=\"p\">.</span><span class=\"n\">next_node</span>\n  <span class=\"n\">last_node</span><span class=\"p\">.</span><span class=\"n\">next_node</span> <span class=\"o\">=</span> <span class=\"n\">node</span>\n</code></pre>\n</div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": null,
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": null,
      "answers": [
        {
          "weight": 0,
          "migration_id": "RESPONSE_2604",
          "id": 2604,
          "text": "O(1)",
          "comments": "Not quite! Is there a loop somewhere in the code?",
          "comments_html": "Not quite! Is there a loop somewhere in the code?&nbsp;"
        },
        {
          "weight": 100,
          "migration_id": "RESPONSE_1713",
          "id": 1713,
          "text": "O(n)",
          "comments": "Yes we are using a while loop to look through the list. There are n nodes in the list so the worst case runtime is O(n)",
          "comments_html": "Yes we are using a while loop to look through the list. There are <code>n</code> nodes in the list so the worst case runtime is <code>O(n)</code>"
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_1427",
          "id": 1427,
          "text": "O(n2)",
          "html": "O(n<sup>2</sup>)",
          "comments": "Not quite! The code does not seem to be using nested loops.",
          "comments_html": "Not quite! The code does not seem to be using nested loops.&nbsp;"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366074,
      "quiz_id": 53503,
      "quiz_group_id": null,
      "assessment_question_id": null,
      "position": 5,
      "question_name": "Question 5",
      "question_type": "multiple_choice_question",
      "question_text": "When should we use a set?&nbsp;",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": null,
      "correct_comments_html": null,
      "incorrect_comments_html": null,
      "neutral_comments_html": null,
      "answers": [
        {
          "weight": 100,
          "migration_id": "RESPONSE_6384",
          "id": 6384,
          "text": "To store a collection ofuniquevalues",
          "html": "<span>To store a collection of&nbsp;</span><strong>unique</strong><span>&nbsp;values</span>",
          "comments": "Correct! Since the algorithm needs to iterate through each letter of the input, the time complexity will grow in linear proportion to the size of the input.",
          "comments_html": "Correct! Since the algorithm needs to iterate through each letter of the input,\nthe time complexity will grow in linear proportion to the size of the input."
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_33",
          "id": 33,
          "text": "To store key value pairs.",
          "comments": "Not quite. A Dictionary would be better for this use case."
        },
        {
          "weight": 0,
          "migration_id": "RESPONSE_4631",
          "id": 4631,
          "text": "When we need a FIFO(First in first out) data structure?",
          "html": "When we need a FIFO(First in first out) data structure?&nbsp;",
          "comments": "Not quite. A set does not maintain insertion order.",
          "comments_html": "Not quite. A set does not maintain insertion order.&nbsp;"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}