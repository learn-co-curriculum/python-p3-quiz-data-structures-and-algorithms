{
  "quiz": {
    "id": 53503,
    "title": "Data Structures and Algorithms Quiz",
    "html_url": "https://learning.flatironschool.com/courses/7559/quizzes/53503",
    "mobile_url": "https://learning.flatironschool.com/courses/7559/quizzes/53503?force_user=1&persist_headless=1",
    "description": "<div id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"python-p3-quiz-data-structures-and-algorithms\"></div>\n<header class=\"fis-header\">\n  <a class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/python-p3-quiz-data-structures-and-algorithms/issues/new\" target=\"_blank\"><img id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"></a>\n</header>\n\n<p>It's time to check your knowledge! Use this quiz to create a custom study guide.\nNote any answers that were marked incorrect, so you can study the relevant\nmaterial and try this quiz again.</p>\n\n<p>If you don't know the answer to a question, please do not guess. Instead, select\n\"I don't know\". It's OK not to know everything and to admit when we're unsure.</p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 5,
    "points_possible": 5.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_53503"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": "",
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53503/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53503/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/7559/quizzes/53503/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/7559/quizzes/53503/submission_versions",
    "assignment_id": 263582,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 25101,
    "show_correct_answers_last_attempt": true,
    "version_number": 4,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": "g9bb72e6d45711d8d39f00be23b5a92a2",
    "in_paced_course": false,
    "question_types": [

    ]
  },
  "questions": [
    {
      "id": 366070,
      "quiz_id": 53503,
      "quiz_group_id": null,
      "assessment_question_id": 632197,
      "position": null,
      "question_name": "Question 1",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Which one of these is a FIFO(First in first out) data structure?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": 7361,
          "text": "",
          "html": "<p>Set</p>",
          "comments": "",
          "comments_html": "<p>Not quite!</p>",
          "weight": 0.0
        },
        {
          "id": 7391,
          "text": "",
          "html": "<p>Queue</p>",
          "comments": "",
          "comments_html": "<p>Correct!</p>",
          "weight": 100.0
        },
        {
          "id": 5696,
          "text": "",
          "html": "<p>Stack</p>",
          "comments": "",
          "comments_html": "<p>Not quite! When can we access the first thing we added to the stack? Imagine a\nstack of books and you can only remove and add to the top.</p>",
          "weight": 0.0
        },
        {
          "id": 480,
          "text": "",
          "html": "<p>Dictionary</p>",
          "comments": "",
          "comments_html": "<p>Incorrect, A dictionary does not keep track of insertion order.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366071,
      "quiz_id": 53503,
      "quiz_group_id": null,
      "assessment_question_id": 632195,
      "position": null,
      "question_name": "Question 2",
      "question_type": "multiple_answers_question",
      "question_text": "<p>What are the essential methods of a Stack?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Resources: Stack Data Structure",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/stack-data-structure\">Stack Data Structure</a></li></ul><p></p>",
      "answers": [
        {
          "id": 1534,
          "text": "",
          "comments": "",
          "comments_html": "<p>Correct! We need to be able to add to the stack.</p>",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"n\">push</span>\n</code></pre></div>"
        },
        {
          "id": 9860,
          "text": "",
          "comments": "",
          "comments_html": "<p>Correct! We need to be able to take elements things from the top of the\nstack.</p>",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"n\">pop</span>\n</code></pre></div>"
        },
        {
          "id": 2917,
          "text": "",
          "comments": "",
          "comments_html": "<p>Not quite! We may write additional methods but this it is not an essential\nmethod of a stack.</p>",
          "weight": 0.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"k\">print</span>\n</code></pre></div>"
        },
        {
          "id": 9243,
          "text": "",
          "comments": "",
          "comments_html": "<p>Correct! This is how we can see what is on top of the stack.</p>",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"n\">peek</span>\n</code></pre></div>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366072,
      "quiz_id": 53503,
      "quiz_group_id": null,
      "assessment_question_id": 632216,
      "position": null,
      "question_name": "Question 3",
      "question_type": "multiple_choice_question",
      "question_text": "<p>What is the time complexity for a Linked List search method?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Resources: Singly Linked List Data Structure",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7559/pages/singly-linked-list-data-structure\">Singly Linked List Data Structure</a></li></ul><p></p>",
      "answers": [
        {
          "id": 8765,
          "text": "",
          "html": "<p>O(1)</p>",
          "comments": "",
          "comments_html": "<p>Not quite. What if the element we are looking for is at the end of the\nlist?</p>",
          "weight": 0.0
        },
        {
          "id": 4451,
          "text": "",
          "html": "<p>O(log n)</p>",
          "comments": "",
          "comments_html": "<p>Not quite.</p>",
          "weight": 0.0
        },
        {
          "id": 7955,
          "text": "",
          "html": "<p>O(n)</p>",
          "comments": "",
          "comments_html": "<p>Correct! We may need to go through the entire linked list to find the element we\nare looking for.</p>",
          "weight": 100.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366073,
      "quiz_id": 53503,
      "quiz_group_id": null,
      "assessment_question_id": 632196,
      "position": null,
      "question_name": "Question 4",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Calculate the <strong>time complexity</strong> for the following code using Big O\nnotation:</p>\n<div class=\"highlight\"><pre class=\"highlight python\"><code><span class=\"k\">def</span> <span class=\"nf\">append</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">):</span>\n  <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">head</span> <span class=\"o\">==</span> <span class=\"bp\">None</span><span class=\"p\">:</span>\n    <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">head</span> <span class=\"o\">=</span> <span class=\"n\">node</span>\n    <span class=\"k\">return</span>\n  <span class=\"n\">last_node</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">head</span>\n  <span class=\"k\">while</span> <span class=\"n\">last_node</span><span class=\"p\">.</span><span class=\"n\">next_node</span><span class=\"p\">:</span>\n    <span class=\"n\">last_node</span> <span class=\"o\">=</span> <span class=\"n\">last_node</span><span class=\"p\">.</span><span class=\"n\">next_node</span>\n  <span class=\"n\">last_node</span><span class=\"p\">.</span><span class=\"n\">next_node</span> <span class=\"o\">=</span> <span class=\"n\">node</span>\n</code></pre></div>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": 8683,
          "text": "",
          "html": "<p>O(1)</p>",
          "comments": "",
          "comments_html": "<p>Not quite! Is there a loop somewhere in the code?</p>",
          "weight": 0.0
        },
        {
          "id": 1270,
          "text": "",
          "html": "<p>O(n)</p>",
          "comments": "",
          "comments_html": "<p>Yes we are using a while loop to look through the list. There are <code>n</code> nodes in\nthe list so the worst case runtime is <code>O(n)</code></p>",
          "weight": 100.0
        },
        {
          "id": 3525,
          "text": "",
          "html": "<p>O(n&lt;sup&gt;2&lt;/sup&gt;)</p>",
          "comments": "",
          "comments_html": "<p>Not quite! The code does not seem to be using nested loops.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366074,
      "quiz_id": 53503,
      "quiz_group_id": null,
      "assessment_question_id": 632194,
      "position": null,
      "question_name": "Question 5",
      "question_type": "multiple_choice_question",
      "question_text": "<p>When should we use a set?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "",
      "answers": [
        {
          "id": 1214,
          "text": "",
          "html": "<p>To store a collection of <strong>unique</strong> values.</p>",
          "comments": "",
          "comments_html": "<p>Correct! Since the algorithm needs to iterate through each letter of the input,\nthe time complexity will grow in linear proportion to the size of the input.</p>",
          "weight": 100.0
        },
        {
          "id": 263,
          "text": "",
          "html": "<p>To store key value pairs.</p>",
          "comments": "",
          "comments_html": "<p>Not quite. A Dictionary would be better for this use case.</p>",
          "weight": 0.0
        },
        {
          "id": 7532,
          "text": "",
          "html": "<p>When we need a FIFO(First in first out) data structure?</p>",
          "comments": "",
          "comments_html": "<p>Not quite. A set does not maintain insertion order.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}